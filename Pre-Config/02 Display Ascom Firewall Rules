# Creatated by Awitac 
# Changes                                                                                                      ES 2023-02-20
#
#############################################################################################################################
#
#    * Script retrieves firewall rules with a display name that starts with "Ascom"
#    * Script filters the retrieved rules to only select those that have an inbound direction
#    * If firewall rules are found, format and display the relevant information in a table
#    * If no firewall rules are found, display a message indicating that no rules were found
# 
#############################################################################################################################
#
# Retrieve firewall rules with a display name that starts with "Ascom"
$firewallRules = Get-NetFirewallRule -DisplayName "Ascom*" | Where-Object { $_.Direction -eq "Inbound" }

# If firewall rules are found, display the relevant information.
if ($firewallRules) {
    $firewallRules | Format-Table DisplayName, DisplayGroup, 
    @{Name='Protocol';Expression={($_ | Get-NetFirewallPortFilter).Protocol}}, 
    @{Name='LocalPort';Expression={($_ | Get-NetFirewallPortFilter).LocalPort}}, 
    @{Name='RemotePort';Expression={($_ | Get-NetFirewallPortFilter).RemotePort}}, 
    @{Name='RemoteAddress';Expression={($_ | Get-NetFirewallAddressFilter).RemoteAddress}}, Enabled, Profile, Direction, Action -AutoSize -Wrap |
    # Convert the output to a string and color it green.
    Out-String -Stream | ForEach-Object { Write-Host $_ -ForegroundColor Green }
}
# If no firewall rules are found, display a message in yellow.
else {
    Write-Host "No firewall rules found." -ForegroundColor Yellow
}
