# Part 1: Retrieve SSL certificate bindings and save the output to a file
# Get the bindings
$bindings = netsh http show sslcert

# Display the list of bindings
Write-Host "List of bindings:"
for ($i = 0; $i -lt $bindings.Count; $i++) {
    Write-Host "$($bindings[$i].Trim())"
}

# Save the list of bindings to a text file
$bindings | Out-File -FilePath "C:\outputSSL.txt"

# Open the file in a new window
Invoke-Item "C:\outputSSL.txt"


# Part 2: Add a new SSL certificate binding
# Prompt user for input
do {
    Write-Host -NoNewline -ForegroundColor Yellow "Enter the Thumbprint of the Certificate: "
    $certificateThumbprint = Read-Host
} until ($certificateThumbprint -match '^[0-9a-fA-F]{40}$')

do {
    Write-Host -NoNewline -ForegroundColor Yellow "Enter the Port number: "
    $port = Read-Host
} until ($port -match '^\d{1,5}$')

# Check if the port is already in use
$existingBinding = netsh http show sslcert | Where-Object { $_ -match $port }
if ($existingBinding) {
    Write-Host "Error: Port $port is already in use in a certificate binding:" -ForegroundColor Red

} else {
    do {
        Write-Host -NoNewline -ForegroundColor Yellow "Enter the Application ID: "
        $applicationId = Read-Host
    } until ($applicationId -match '^(\{){0,1}[0-9a-fA-F]{8}(\-){0,1}[0-9a-fA-F]{4}(\-){0,1}[0-9a-fA-F]{4}(\-){0,1}[0-9a-fA-F]{4}(\-){0,1}[0-9a-fA-F]{12}(\}){0,1}$')

    # Add binding
    try {
        netsh http add sslcert ipport=0.0.0.0:$port certhash=$certificateThumbprint appid=$applicationId clientcertnegotiation=disable
    } catch {
        Write-Host "SSL Certificate add failed, Error: $_" -ForegroundColor Red
    }
}

Start-Sleep -Seconds 2

# Part 3: Display the newly added SSL certificate binding
# Display the newly added binding
Write-Host "Result of added binding:"
$newBinding = netsh http show sslcert ipport=0.0.0.0:$port
for ($i = 0; $i -lt $newBinding.Count; $i++) {
    Write-Host "$($newBinding[$i].Trim())"
}

# Part 4: Delete the output file
if (Test-Path "C:\outputSSL.txt") {
    try {
        Remove-Item -Path "C:\outputSSL.txt" -Force
        Write-Host "Output file deleted." -ForegroundColor Yellow
    } catch {
        Write-Host "Error: $_"
    }
} else {
    Write-Host "Output file not found." -ForegroundColor Yellow
}
